// Code generated by templ@v0.2.334 DO NOT EDIT.

package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func Index() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<!doctype html><html><head><script src=\"https://unpkg.com/htmx.org@1.9.5\">")
		if err != nil {
			return err
		}
		var_2 := ``
		_, err = templBuffer.WriteString(var_2)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</script><script>")
		if err != nil {
			return err
		}
		var_3 := ` <!-- source: https://stackoverflow.com/a/76134033 -->
		htmx.defineExtension('reset-on-success', {
			onEvent: function(name, event) {
				if (name !== 'htmx:beforeSwap') return;
				if (event.detail.isError) return;

				const triggeringElt = event.detail.requestConfig.elt;
				if (!triggeringElt.closest('[hx-reset-on-success]') && !triggeringElt.closest('[data-hx-reset-on-success]'))
				return;

				switch (triggeringElt.tagName) {
					case 'INPUT':
					case 'TEXTAREA':
						triggeringElt.value = triggeringElt.defaultValue;
						break;
					case 'SELECT':
						//too much work
						break;
					case 'FORM':
						triggeringElt.reset();
						break;
				}
			}
		});
		`
		_, err = templBuffer.WriteString(var_3)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</script><link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"></head><body hx-ext=\"reset-on-success\"><h1>")
		if err != nil {
			return err
		}
		var_4 := `Shopping List`
		_, err = templBuffer.WriteString(var_4)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</h1><div hx-get=\"/list\" hx-trigger=\"load,every 1s\"></div><form hx-post=\"/add-item\" hx-swap=\"afterend\" hx-target=\"previous li\" hx-reset-on-success><input type=\"text\" name=\"item\"><input type=\"submit\"></form></body></html>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
